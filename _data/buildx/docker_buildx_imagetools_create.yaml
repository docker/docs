command: docker buildx imagetools create
short: Create a new image based on source images
long: |-
  Create a new manifest list based on source manifests. The source manifests can
  be manifest lists or single platform distribution manifests and must already
  exist in the registry where the new manifest is created. If only one source is
  specified, create performs a carbon copy.
usage: docker buildx imagetools create [OPTIONS] [SOURCE] [SOURCE...]
pname: docker buildx imagetools
plink: docker_buildx_imagetools.yaml
options:
- option: append
  value_type: bool
  default_value: "false"
  description: Append to existing manifest
  details_url: '#append'
  deprecated: false
  hidden: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: dry-run
  value_type: bool
  default_value: "false"
  description: Show final image instead of pushing
  details_url: '#dry-run'
  deprecated: false
  hidden: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: file
  shorthand: f
  value_type: stringArray
  default_value: '[]'
  description: Read source descriptor from file
  details_url: '#file'
  deprecated: false
  hidden: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: tag
  shorthand: t
  value_type: stringArray
  default_value: '[]'
  description: Set reference for new image
  details_url: '#tag'
  deprecated: false
  hidden: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
inherited_options:
- option: builder
  value_type: string
  description: Override the configured builder instance
  details_url: '#builder'
  deprecated: false
  hidden: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  ### Append new sources to an existing manifest list (--append) {#append}

  Use the `--append` flag to append the new sources to an existing manifest list
  in the destination.

  ### Override the configured builder instance (--builder) {#builder}

  Same as [`buildx --builder`](buildx.md#builder).

  ### Show final image instead of pushing (--dry-run) {#dry-run}

  Use the `--dry-run` flag to not push the image, just show it.

  ### Read source descriptor from a file (-f, --file) {#file}

  ```
  -f FILE or --file FILE
  ```

  Reads source from files. A source can be a manifest digest, manifest reference,
  or a JSON of OCI descriptor object.

  In order to define annotations or additional platform properties like `os.version` and
  `os.features` you need to add them in the OCI descriptor object encoded in JSON.

  ```console
  $ docker buildx imagetools inspect --raw alpine | jq '.manifests[0] | .platform."os.version"="10.1"' > descr.json
  $ docker buildx imagetools create -f descr.json myuser/image
  ```

  The descriptor in the file is merged with existing descriptor in the registry if it exists.

  The supported fields for the descriptor are defined in [OCI spec](https://github.com/opencontainers/image-spec/blob/master/descriptor.md#properties) .

  ### Set reference for new image  (-t, --tag) {#tag}

  ```
  -t IMAGE or --tag IMAGE
  ```

  Use the `-t` or `--tag` flag to set the name of the image to be created.

  ```console
  $ docker buildx imagetools create --dry-run alpine@sha256:5c40b3c27b9f13c873fefb2139765c56ce97fd50230f1f2d5c91e55dec171907 sha256:c4ba6347b0e4258ce6a6de2401619316f982b7bcc529f73d2a410d0097730204
  $ docker buildx imagetools create -t tonistiigi/myapp -f image1 -f image2
  ```
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

