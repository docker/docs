command: docker stack ls
aliases: list
short: List stacks
long: |-
  Lists the stacks.

  > **Note**
  >
  > This is a cluster management command, and must be executed on a swarm
  > manager node. To learn about managers and workers, refer to the
  > [Swarm mode section](https://docs.docker.com/engine/swarm/) in the
  > documentation.
usage: docker stack ls [OPTIONS]
pname: docker stack
plink: docker_stack.yaml
options:
- option: all-namespaces
  value_type: bool
  default_value: "false"
  description: List stacks from all Kubernetes namespaces
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
- option: format
  value_type: string
  description: Pretty-print stacks using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: namespace
  value_type: stringSlice
  default_value: '[]'
  description: Kubernetes namespaces to use
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
inherited_options:
- option: kubeconfig
  value_type: string
  description: Kubernetes config file
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
- option: orchestrator
  value_type: string
  description: Orchestrator to use (swarm|kubernetes|all)
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  The following command shows all stacks and some additional information:

  ```console
  $ docker stack ls

  ID                 SERVICES            ORCHESTRATOR
  myapp              2                   Kubernetes
  vossibility-stack  6                   Swarm
  ```

  ### Formatting

  The formatting option (`--format`) pretty-prints stacks using a Go template.

  Valid placeholders for the Go template are listed below:

  | Placeholder     | Description        |
  |-----------------|--------------------|
  | `.Name`         | Stack name         |
  | `.Services`     | Number of services |
  | `.Orchestrator` | Orchestrator name  |
  | `.Namespace`    | Namespace          |

  When using the `--format` option, the `stack ls` command either outputs
  the data exactly as the template declares or, when using the
  `table` directive, includes column headers as well.

  The following example uses a template without headers and outputs the
  `Name` and `Services` entries separated by a colon (`:`) for all stacks:

  ```console
  $ docker stack ls --format "{{.Name}}: {{.Services}}"
  web-server: 1
  web-cache: 4
  ```
deprecated: false
min_api_version: "1.25"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

